#!/bin/bash

# import common functions
source "$(dirname "$0")"/bridges_common.sh

# Expected sovereign accounts.
#
# Generated by:
#
#  #[test]
#	fn generate_sovereign_accounts() {
#		use sp_core::crypto::Ss58Codec;
#		use polkadot_parachain_primitives::primitives::Sibling;
#
#		parameter_types! {
#			pub UniversalLocationAHR: InteriorMultiLocation = X2(GlobalConsensus(Kusama), Parachain(1000));
#			pub UniversalLocationAHW: InteriorMultiLocation = X2(GlobalConsensus(Polkadot), Parachain(1000));
#		}
#
#		// SS58=42
#		println!("GLOBAL_CONSENSUS_KUSAMA_SOVEREIGN_ACCOUNT=\"{}\"",
#				 frame_support::sp_runtime::AccountId32::new(
#					 GlobalConsensusConvertsFor::<UniversalLocationAHW, [u8; 32]>::convert_location(
#						 &MultiLocation { parents: 2, interior: X1(GlobalConsensus(Kusama)) }).unwrap()
#				 ).to_ss58check_with_version(2_u16.into())
#		);
#		println!("GLOBAL_CONSENSUS_KUSAMA_ASSET_HUB_KUSAMA_1000_SOVEREIGN_ACCOUNT=\"{}\"",
#				 frame_support::sp_runtime::AccountId32::new(
#					 GlobalConsensusParachainConvertsFor::<UniversalLocationAHW, [u8; 32]>::convert_location(
#						 &MultiLocation { parents: 2, interior: X2(GlobalConsensus(Kusama), Parachain(1000)) }).unwrap()
#				 ).to_ss58check_with_version(2_u16.into())
#		);
#		println!("ASSET_HUB_POLKADOT_SOVEREIGN_ACCOUNT_AT_BRIDGE_HUB_POLKADOT=\"{}\"",
#				 frame_support::sp_runtime::AccountId32::new(
#					 SiblingParachainConvertsVia::<Sibling, [u8; 32]>::convert_location(
#						 &MultiLocation { parents: 1, interior: X1(Parachain(1000)) }).unwrap()
#				 ).to_ss58check_with_version(0_u16.into())
#		);
#
#		// SS58=42
#		println!("GLOBAL_CONSENSUS_POLKADOT_SOVEREIGN_ACCOUNT=\"{}\"",
#				 frame_support::sp_runtime::AccountId32::new(
#					 GlobalConsensusConvertsFor::<UniversalLocationAHR, [u8; 32]>::convert_location(
#						 &MultiLocation { parents: 2, interior: X1(GlobalConsensus(Polkadot)) }).unwrap()
#				 ).to_ss58check_with_version(0_u16.into())
#		);
#		println!("GLOBAL_CONSENSUS_POLKADOT_ASSET_HUB_POLKADOT_1000_SOVEREIGN_ACCOUNT=\"{}\"",
#				 frame_support::sp_runtime::AccountId32::new(
#					 GlobalConsensusParachainConvertsFor::<UniversalLocationAHR, [u8; 32]>::convert_location(
#						 &MultiLocation { parents: 2, interior: X2(GlobalConsensus(Polkadot), Parachain(1000)) }).unwrap()
#				 ).to_ss58check_with_version(0_u16.into())
#		);
#		println!("ASSET_HUB_KUSAMA_SOVEREIGN_ACCOUNT_AT_BRIDGE_HUB_KUSAMA=\"{}\"",
#				 frame_support::sp_runtime::AccountId32::new(
#					 SiblingParachainConvertsVia::<Sibling, [u8; 32]>::convert_location(
#						 &MultiLocation { parents: 1, interior: X1(Parachain(1000)) }).unwrap()
#				 ).to_ss58check_with_version(2_u16.into())
#		);
#	}
GLOBAL_CONSENSUS_KUSAMA_SOVEREIGN_ACCOUNT="GZvz9nBr7jH2NDRy7M3vaoB9frRXRnYrgAtst3Yq5GwhigN"
GLOBAL_CONSENSUS_KUSAMA_ASSET_HUB_KUSAMA_1000_SOVEREIGN_ACCOUNT="DrEwjT1Y71MthoeGMnc4yCRQKTSS2bVQAfBa6hWaXa1sePY"
ASSET_HUB_POLKADOT_SOVEREIGN_ACCOUNT_AT_BRIDGE_HUB_POLKADOT="13cKp89SgdtqUngo2WiEijPrQWdHFhzYZLf2TJePKRvExk7o"
GLOBAL_CONSENSUS_POLKADOT_SOVEREIGN_ACCOUNT="14PXCnR6pbfwXBKpesq1BXaQmroTyKyhoMgGAccHRAGsh79S"
GLOBAL_CONSENSUS_POLKADOT_ASSET_HUB_POLKADOT_1000_SOVEREIGN_ACCOUNT="14MxDFjJVwZ592ZoU5628378LAEyPSRZaZknUtJA2MkHNfnY"
ASSET_HUB_KUSAMA_SOVEREIGN_ACCOUNT_AT_BRIDGE_HUB_KUSAMA="FBeL7EFTDeHnuViqaUHUXvhhUusN5FawDmHgfvzF97DXFr3"

# Expected sovereign accounts for rewards on BridgeHubs.
#
# Generated by:
#	#[test]
#	fn generate_sovereign_accounts_for_rewards() {
#		use bp_messages::LaneId;
#		use bp_relayers::{PayRewardFromAccount, RewardsAccountOwner, RewardsAccountParams};
#		use sp_core::crypto::Ss58Codec;
#
#		// SS58=2
#		println!(
#			"ON_BRIDGE_HUB_KUSAMA_SOVEREIGN_ACCOUNT_FOR_LANE_00000001_bhwd_ThisChain=\"{}\"",
#			frame_support::sp_runtime::AccountId32::new(
#				PayRewardFromAccount::<[u8; 32], [u8; 32]>::rewards_account(RewardsAccountParams::new(
#					LaneId([0, 0, 0, 1]),
#					*b"bhwd",
#					RewardsAccountOwner::ThisChain
#				))
#			)
#				.to_ss58check_with_version(2_u16.into())
#		);
#		// SS58=2
#		println!(
#			"ON_BRIDGE_HUB_KUSAMA_SOVEREIGN_ACCOUNT_FOR_LANE_00000001_bhwd_BridgedChain=\"{}\"",
#			frame_support::sp_runtime::AccountId32::new(
#				PayRewardFromAccount::<[u8; 32], [u8; 32]>::rewards_account(RewardsAccountParams::new(
#					LaneId([0, 0, 0, 1]),
#					*b"bhwd",
#					RewardsAccountOwner::BridgedChain
#				))
#			)
#				.to_ss58check_with_version(42_u16.into())
#		);
#
#		// SS58=0
#		println!(
#			"ON_BRIDGE_HUB_POLKADOT_SOVEREIGN_ACCOUNT_FOR_LANE_00000001_bhro_ThisChain=\"{}\"",
#			frame_support::sp_runtime::AccountId32::new(
#				PayRewardFromAccount::<[u8; 32], [u8; 32]>::rewards_account(RewardsAccountParams::new(
#					LaneId([0, 0, 0, 1]),
#					*b"bhro",
#					RewardsAccountOwner::ThisChain
#				))
#			)
#				.to_ss58check_with_version(0_u16.into())
#		);
#		// SS58=0
#		println!(
#			"ON_BRIDGE_HUB_POLKADOT_SOVEREIGN_ACCOUNT_FOR_LANE_00000001_bhro_BridgedChain=\"{}\"",
#			frame_support::sp_runtime::AccountId32::new(
#				PayRewardFromAccount::<[u8; 32], [u8; 32]>::rewards_account(RewardsAccountParams::new(
#					LaneId([0, 0, 0, 1]),
#					*b"bhro",
#					RewardsAccountOwner::BridgedChain
#				))
#			)
#				.to_ss58check_with_version(0_u16.into())
#		);
#	}
ON_BRIDGE_HUB_KUSAMA_SOVEREIGN_ACCOUNT_FOR_LANE_00000001_bhwd_ThisChain="EoQBtnwp4jMtCEq87vU25F6dzdpy3eh29u9SwKV18k564Yc"
ON_BRIDGE_HUB_KUSAMA_SOVEREIGN_ACCOUNT_FOR_LANE_00000001_bhwd_BridgedChain="5EHnXaT5BhiS8YRPMR7gs9Rgbu2ncvwPJSzucDjMzAQJcqHV"
ON_BRIDGE_HUB_POLKADOT_SOVEREIGN_ACCOUNT_FOR_LANE_00000001_bhro_ThisChain="13E5fui93Uyua5RtrqxkegHZUnpp83HfrKU8s2wN6ePkGJoj"
ON_BRIDGE_HUB_POLKADOT_SOVEREIGN_ACCOUNT_FOR_LANE_00000001_bhro_BridgedChain="13E5fui93Uyua5Rtrqy2Phq9bHW1abPYazQeQydCZUGUXgn4"

LANE_ID="00000001"

# TODO: maybe init using sudo???

function init_ksm_dot() {
    ensure_relayer

    RUST_LOG=runtime=trace,rpc=trace,bridge=trace \
        ~/local_bridge_testing/bin/substrate-relay init-bridge kusama-to-bridge-hub-polkadot \
	--source-host localhost \
	--source-port 9942 \
	--source-version-mode Auto \
	--target-host localhost \
	--target-port 8945 \
	--target-version-mode Auto \
	--target-signer //Bob
}

function init_dot_ksm() {
    ensure_relayer

    RUST_LOG=runtime=trace,rpc=trace,bridge=trace \
        ~/local_bridge_testing/bin/substrate-relay init-bridge polkadot-to-bridge-hub-kusama \
        --source-host localhost \
        --source-port 9945 \
        --source-version-mode Auto \
        --target-host localhost \
        --target-port 8943 \
        --target-version-mode Auto \
        --target-signer //Bob
}

function run_relay() {
    ensure_relayer

    RUST_LOG=runtime=trace,rpc=trace,bridge=trace \
        ~/local_bridge_testing/bin/substrate-relay relay-headers-and-messages bridge-hub-kusama-bridge-hub-polkadot \
        --kusama-host localhost \
        --kusama-port 9942 \
        --kusama-version-mode Auto \
        --bridge-hub-kusama-host localhost \
        --bridge-hub-kusama-port 8943 \
        --bridge-hub-kusama-version-mode Auto \
        --bridge-hub-kusama-signer //Charlie \
        --bridge-hub-kusama-transactions-mortality 4 \
        --polkadot-host localhost \
        --polkadot-port 9945 \
        --polkadot-version-mode Auto \
        --bridge-hub-polkadot-host localhost \
        --bridge-hub-polkadot-port 8945 \
        --bridge-hub-polkadot-version-mode Auto \
        --bridge-hub-polkadot-signer //Charlie \
        --bridge-hub-polkadot-transactions-mortality 4 \
        --lane "${LANE_ID}"
}

case "$1" in
  run-relay)
    init_ksm_dot
    init_dot_ksm
    run_relay
    ;;
  init-asset-hub-kusama-local)
      ensure_polkadot_js_api
      # create foreign assets for native Polkadot token (governance call on Kusama)
      force_create_foreign_asset \
          "ws://127.0.0.1:9942" \
          "//Alice" \
          1000 \
          "ws://127.0.0.1:9910" \
          "$(jq --null-input '{ "parents": 2, "interior": { "X1": { "GlobalConsensus": "Polkadot" } } }')" \
          "$GLOBAL_CONSENSUS_POLKADOT_SOVEREIGN_ACCOUNT" \
          10000000000 \
          true
      # drip SA which holds reserves
      transfer_balance \
          "ws://127.0.0.1:9910" \
          "//Alice" \
          "$GLOBAL_CONSENSUS_POLKADOT_ASSET_HUB_POLKADOT_1000_SOVEREIGN_ACCOUNT" \
          $((1000000000 + 50000000000 * 20))
      # HRMP
      open_hrmp_channels \
          "ws://127.0.0.1:9942" \
          "//Alice" \
          1000 1002 4 524288
      open_hrmp_channels \
          "ws://127.0.0.1:9942" \
          "//Alice" \
          1002 1000 4 524288
      ;;
  init-bridge-hub-kusama-local)
      ensure_polkadot_js_api
      # SA of sibling asset hub pays for the execution
      transfer_balance \
          "ws://127.0.0.1:8943" \
          "//Alice" \
          "$ASSET_HUB_KUSAMA_SOVEREIGN_ACCOUNT_AT_BRIDGE_HUB_KUSAMA" \
          $((1000000000 + 50000000000 * 20))
      # drip SA of lane dedicated to asset hub for paying rewards for delivery
      transfer_balance \
          "ws://127.0.0.1:8943" \
          "//Alice" \
          "$ON_BRIDGE_HUB_KUSAMA_SOVEREIGN_ACCOUNT_FOR_LANE_00000002_bhwd_ThisChain" \
          $((1000000000 + 2000000000000))
      # drip SA of lane dedicated to asset hub for paying rewards for delivery confirmation
      transfer_balance \
          "ws://127.0.0.1:8943" \
          "//Alice" \
          "$ON_BRIDGE_HUB_KUSAMA_SOVEREIGN_ACCOUNT_FOR_LANE_00000002_bhwd_BridgedChain" \
          $((1000000000 + 2000000000000))
      ;;
  init-asset-hub-polkadot-local)
      ensure_polkadot_js_api
      # create foreign assets for native Kusama token (governance call on Polkadot)
      force_create_foreign_asset \
          "ws://127.0.0.1:9945" \
          "//Alice" \
          1000 \
          "ws://127.0.0.1:9010" \
          "$(jq --null-input '{ "parents": 2, "interior": { "X1": { "GlobalConsensus": "Kusama" } } }')" \
          "$GLOBAL_CONSENSUS_KUSAMA_SOVEREIGN_ACCOUNT" \
          10000000000 \
          true
      # drip SA which holds reserves
      transfer_balance \
          "ws://127.0.0.1:9010" \
          "//Alice" \
          "$GLOBAL_CONSENSUS_KUSAMA_ASSET_HUB_KUSAMA_1000_SOVEREIGN_ACCOUNT" \
          $((1000000000 + 50000000000 * 20))
      # HRMP
      open_hrmp_channels \
          "ws://127.0.0.1:9945" \
          "//Alice" \
          1000 1002 4 524288
      open_hrmp_channels \
          "ws://127.0.0.1:9945" \
          "//Alice" \
          1002 1000 4 524288
      ;;
  init-bridge-hub-polkadot-local)
      # SA of sibling asset hub pays for the execution
      transfer_balance \
          "ws://127.0.0.1:8945" \
          "//Alice" \
          "$ASSET_HUB_POLKADOT_SOVEREIGN_ACCOUNT_AT_BRIDGE_HUB_POLKADOT" \
          $((1000000000 + 50000000000 * 20))
      # drip SA of lane dedicated to asset hub for paying rewards for delivery
      transfer_balance \
          "ws://127.0.0.1:8945" \
          "//Alice" \
          "$ON_BRIDGE_HUB_POLKADOT_SOVEREIGN_ACCOUNT_FOR_LANE_00000002_bhro_ThisChain" \
          $((1000000000 + 2000000000000))
      # drip SA of lane dedicated to asset hub for paying rewards for delivery confirmation
      transfer_balance \
          "ws://127.0.0.1:8945" \
          "//Alice" \
          "$ON_BRIDGE_HUB_POLKADOT_SOVEREIGN_ACCOUNT_FOR_LANE_00000002_bhro_BridgedChain" \
          $((1000000000 + 2000000000000))
      ;;
  reserve-transfer-assets-from-asset-hub-kusama-local)
      ensure_polkadot_js_api
      # send ROCs to Alice account on AHW
      limited_reserve_transfer_assets \
          "ws://127.0.0.1:9910" \
          "//Alice" \
          "$(jq --null-input '{ "V3": { "parents": 2, "interior": { "X2": [ { "GlobalConsensus": "Polkadot" }, { "Parachain": 1000 } ] } } }')" \
          "$(jq --null-input '{ "V3": { "parents": 0, "interior": { "X1": { "AccountId32": { "id": [212, 53, 147, 199, 21, 253, 211, 28, 97, 20, 26, 189, 4, 169, 159, 214, 130, 44, 133, 88, 133, 76, 205, 227, 154, 86, 132, 231, 165, 109, 162, 125] } } } } }')" \
          "$(jq --null-input '{ "V3": [ { "id": { "Concrete": { "parents": 1, "interior": "Here" } }, "fun": { "Fungible": 20000000000000 } } ] }')" \
          0 \
          "Unlimited"
      ;;
  reserve-transfer-assets-from-asset-hub-polkadot-local)
      ensure_polkadot_js_api
      # send WOCs to Alice account on AHR
      limited_reserve_transfer_assets \
          "ws://127.0.0.1:9010" \
          "//Alice" \
          "$(jq --null-input '{ "V3": { "parents": 2, "interior": { "X2": [ { "GlobalConsensus": "Kusama" }, { "Parachain": 1000 } ] } } }')" \
          "$(jq --null-input '{ "V3": { "parents": 0, "interior": { "X1": { "AccountId32": { "id": [212, 53, 147, 199, 21, 253, 211, 28, 97, 20, 26, 189, 4, 169, 159, 214, 130, 44, 133, 88, 133, 76, 205, 227, 154, 86, 132, 231, 165, 109, 162, 125] } } } } }')" \
          "$(jq --null-input '{ "V3": [ { "id": { "Concrete": { "parents": 1, "interior": "Here" } }, "fun": { "Fungible": 15000000000000 } } ] }')" \
          0 \
          "Unlimited"
      ;;
  claim-rewards-bridge-hub-kusama-local)
      ensure_polkadot_js_api
      # bhwd -> [62, 68, 77, 64] -> 0x62687764
      claim_rewards \
          "ws://127.0.0.1:8943" \
          "//Charlie" \
          "0x${LANE_ID}" \
          "0x62687764" \
          "ThisChain"
      claim_rewards \
          "ws://127.0.0.1:8943" \
          "//Charlie" \
          "0x${LANE_ID}" \
          "0x62687764" \
          "BridgedChain"
      ;;
  claim-rewards-bridge-hub-polkadot-local)
      # bhro -> [62, 68, 72, 6f] -> 0x62686B73
      claim_rewards \
          "ws://127.0.0.1:8945" \
          "//Charlie" \
          "0x${LANE_ID}" \
          "0x62686B73" \
          "ThisChain"
      claim_rewards \
          "ws://127.0.0.1:8945" \
          "//Charlie" \
          "0x${LANE_ID}" \
          "0x62686B73" \
          "BridgedChain"
      ;;
  stop)
    pkill -f polkadot
    pkill -f parachain
    ;;
  import)
    # to avoid trigger anything here
    ;;
  *)
    echo "A command is require. Supported commands for:
    Local (zombienet) run:
          - upgrade-asset-hub-kusama-runtime
          - upgrade-bridge-hub-kusama-runtime
          - upgrade-asset-hub-polkadot-runtime
          - upgrade-bridge-hub-polkadot-runtime
          - run-relay
          - init-asset-hub-kusama-local
          - init-bridge-hub-kusama-local
          - init-asset-hub-polkadot-local
          - init-bridge-hub-polkadot-local
          - reserve-transfer-assets-from-asset-hub-kusama-local
          - reserve-transfer-assets-from-asset-hub-polkadot-local
          - claim-rewards-bridge-hub-kusama-local
          - claim-rewards-bridge-hub-polkadot-local";
    exit 1
    ;;
esac
