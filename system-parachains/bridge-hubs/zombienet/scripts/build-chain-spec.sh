#!/bin/bash

# we know that this script is called for:
# 1) generating plain chain spec
# 2) generating raw chain spec
# => let's see if `--raw` argument is passed and do what we need to do

PLAIN_CHAIN_SPEC=
RUNTIME_WASM_BLOB=
RAW_CHAIN_SPEC_REQUIRED=
BUILD_SPEC=0
EXPORT_GENESIS_STATE=0
EXPORT_GENESIS_WASM=0

BINARY=
BINARY_ARGS=

echo "ARGS: $@" >>/tmp/my

while test $# -gt 0
do
    if [ -n "$BINARY" ]; then
        BINARY_ARGS="$BINARY_ARGS $1"
    fi

    case "$1" in
        build-spec)
            BUILD_SPEC=1
            ;;
        export-genesis-state)
            EXPORT_GENESIS_STATE=1
            ;;
        export-genesis-wasm)
            EXPORT_GENESIS_WASM=1
            ;;
        --help)
            exit 0
            ;;
        --binary)
            shift
            BINARY=$1
            ;;
        --raw)
            RAW_CHAIN_SPEC_REQUIRED=1
            ;;
        --chain)
            shift
            if [ -n "$BINARY" ]; then
                BINARY_ARGS="$BINARY_ARGS $1"
            fi
            PLAIN_CHAIN_SPEC=$1
            ;;
        --runtime-wasm-blob)
            shift
            RUNTIME_WASM_BLOB=$1
            ;;
    esac
    shift
done

echo "BINARY: $BINARY RUNTIME_WASM_BLOB: $RUNTIME_WASM_BLOB BUILD_SPEC: $BUILD_SPEC EXPORT_GENESIS_STATE: $EXPORT_GENESIS_STATE EXPORT_GENESIS_WASM: $EXPORT_GENESIS_WASM" >>/tmp/my

if [ $BUILD_SPEC -eq 1 ]; then
    if [ -z "$PLAIN_CHAIN_SPEC" ]; then
        echo "Invalid arguments"
        exit 1
    fi

    if [ -z "$RAW_CHAIN_SPEC_REQUIRED" ]; then
        cat $PLAIN_CHAIN_SPEC
    else
        TMP_PATCH=`mktemp`
        TMP_RAW=`mktemp`
        TMP_RAW1=`mktemp`
        TMP_ERR=`mktemp`

        # default specification (generated by runtime) is for a custom live network and zombienet
        # has already generated keystore files for local network
        ORIGINAL_NAME=`cat $PLAIN_CHAIN_SPEC | jq --compact-output --monochrome-output --join-output '.name'`
        ORIGINAL_ID=`cat $PLAIN_CHAIN_SPEC | jq --compact-output --monochrome-output --join-output '.id'`
        ORIGINAL_TYPE=`cat $PLAIN_CHAIN_SPEC | jq --compact-output --monochrome-output --join-output '.chainType'`
        ORIGINAL_RELAY_CHAIN=`cat $PLAIN_CHAIN_SPEC | jq --compact-output --monochrome-output --join-output '.relay_chain | select( . != null )'`
        ORIGINAL_PARA_ID=`cat $PLAIN_CHAIN_SPEC | jq --compact-output --monochrome-output --join-output '.para_id | select( . != null )'`
        ORIGINAL_FORK_BLOCKS=`cat $PLAIN_CHAIN_SPEC | jq --compact-output --monochrome-output --join-output '.forkBlocks | select( . != null )'`
        ORIGINAL_BAD_BLOCKS=`cat $PLAIN_CHAIN_SPEC | jq --compact-output --monochrome-output --join-output '.badBlocks | select( . != null )'`
        ORIGINAL_LIGHT_SYNC_STATE=`cat $PLAIN_CHAIN_SPEC | jq --compact-output --monochrome-output --join-output '.lightSyncState | select( . != null )'`

        #echo $TMP_FILE
        # we are only patching default chain spec, so we need to cut everything else
        cat $PLAIN_CHAIN_SPEC | jq --compact-output --monochrome-output --join-output '.genesis.runtime' >$TMP_PATCH
        # ok, let's generate default chain spec + patch it
        $CHAIN_SPEC_BUILDER_PATH --chain-spec-path $TMP_RAW runtime -s -r $RUNTIME_WASM_BLOB patch -p $TMP_PATCH 2>$TMP_ERR
        if [ $? -eq 0 ]; then
            # restore original chain id, name and type
            cat $TMP_RAW | jq ".name = \"$ORIGINAL_NAME\" | .id = \"$ORIGINAL_ID\" | .chainType = \"$ORIGINAL_TYPE\"" >$TMP_RAW1 && mv $TMP_RAW1 $TMP_RAW
            if [ -n "$ORIGINAL_RELAY_CHAIN" ]; then
              cat $TMP_RAW | jq ".relay_chain = \"$ORIGINAL_RELAY_CHAIN\"" >$TMP_RAW1 && mv $TMP_RAW1 $TMP_RAW
            fi
            if [ -n "$ORIGINAL_PARA_ID" ]; then
              cat $TMP_RAW | jq ".para_id = \"$ORIGINAL_PARA_ID\"" >$TMP_RAW1 && mv $TMP_RAW1 $TMP_RAW
            fi
            if [ -z "$ORIGINAL_FORK_BLOCKS" ]; then
              cat $TMP_RAW | jq "del(.forkBlocks)" >$TMP_RAW1 && mv $TMP_RAW1 $TMP_RAW
            fi
            if [ -z "$ORIGINAL_BAD_BLOCKS" ]; then
              cat $TMP_RAW | jq "del(.badBlocks)" >$TMP_RAW1 && mv $TMP_RAW1 $TMP_RAW
            fi
            if [ -z "$ORIGINAL_LIGHT_SYNC_STATE" ]; then
              cat $TMP_RAW | jq "del(.lightSyncState)" >$TMP_RAW1 && mv $TMP_RAW1 $TMP_RAW
            fi
            cat $TMP_RAW
        else
            cat $TMP_ERR
        fi
    fi
elif [ $EXPORT_GENESIS_STATE -eq 1 ]; then
    $POLKADOT_PARACHAIN_BINARY_PATH export-genesis-state --chain $PLAIN_CHAIN_SPEC
elif [ $EXPORT_GENESIS_WASM -eq 1 ]; then
    xxd -p $RUNTIME_WASM_BLOB | tr -d '\n' | awk '{print "0x"$1}'
else
echo "=== $BINARY $BINARY_ARGS">>/tmp/my
    $BINARY $BINARY_ARGS
fi
